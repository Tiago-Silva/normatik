// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model BusinessGroup {
  id       Int      @id @default(autoincrement())
  name     String   @unique
  status   Boolean
  companies Company[]
}

model Company {
    id              Int             @id @default(autoincrement())
    name            String
    cnpj            String
    doctor          String
    status          Boolean
    businessGroupId Int?
    businessGroup   BusinessGroup?  @relation(fields: [businessGroupId], references: [id])
    branches        Branch[]
    registrationType String
    fantasyName     String
    cnae            String
    cep             String
    rule            Boolean
    esocialGroup    String
  }

model Branch {
  id         String  @id @default(uuid())
  name       String
  companyId  Int
  company    Company @relation(fields: [companyId], references: [id])
  sectors    Sector[]
  employees  Employee[]
}

model Sector {
  id        String  @id @default(uuid())
  name      String
  branchId  String
  branch    Branch @relation(fields: [branchId], references: [id])
  functions Function[]
  employees Employee[]
}

model Function {
  id       String  @id @default(uuid())
  name     String
  sectorId String
  sector   Sector @relation(fields: [sectorId], references: [id])
  employees Employee[]
}

model Employee {
  id         String   @id @default(uuid())
  name       String
  functionId String
  function   Function @relation(fields: [functionId], references: [id])
  sectorId   String
  sector     Sector @relation(fields: [sectorId], references: [id])
  branchId   String
  branch     Branch @relation(fields: [branchId], references: [id])
}